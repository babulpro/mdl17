// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user{
  id BigInt @id @default(autoincrement())
  firstname String @db.VarChar(40)
  lastName String @db.VarChar(50)
  email String @db.VarChar(50) @unique
  mobile String @db.VarChar(44)
  password String @db.VarChar(22)
  otp String @db.VarChar(22)
  
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0)  @updatedAt
  Constraints my_constrain
  index my_index
  customer customer[]
  invoices invoices[]
  invoice_products invoice_products[]
  products products[]
  categories categories[]

   
  
}

model customer {
    id BigInt @id @default(autoincrement())
    name String @db.VarChar(22)
    email String @db.VarChar(44)
    mobile String @db.VarChar(22)
    user_id BigInt 
    createdAt DateTime @default(now()) @db.Timestamp(0)
    updatedAt DateTime @default(now()) @db.Timestamp(0) @updatedAt
    Constraints my_constrain
    indexes my_index
    user user @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
    invoices invoices[]

     
}


model invoices{
  id BigInt @id @default(autoincrement())
  total String @db.VarChar(66)
  discount String @db.VarChar(22)
  vat String @db.VarChar(11)
  payable String @db.VarChar(33)
  user_id BigInt
  customer_id BigInt
  createdAt DateTime @default(now()) @db.Timestamp(0)
   updatedAt DateTime @default(now()) @db.Timestamp(0) @updatedAt
   customer customer @relation(fields: [customer_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
   user user @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
   Constraints my_constrain
   indexes my_index
   invoice_products invoice_products[]
}


model invoice_products{
  id BigInt @id @default(autoincrement())
  invoice_id BigInt    
  product_id BigInt   
  user_id BigInt 
  qty String @db.VarChar(33)
  sale_price String @db.VarChar(44)
  createdAt DateTime @default(now()) @db.Timestamp(0)
   updatedAt DateTime @default(now()) @db.Timestamp(0) @updatedAt
   Constraints my_constrain
   indexes my_index

   user user @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade)

   invoices invoices @relation(fields: [invoice_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
   products  products @relation(fields: [product_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
}
 
 model products{
  id BigInt @id @default(autoincrement())
  category_id BigInt 
  user_id BigInt  

  createdAt DateTime @default(now()) @db.Timestamp(0)
   updatedAt DateTime @default(now()) @db.Timestamp(0) @updatedAt
   Constraints my_constrain
   indexes my_index
   invoice_products invoice_products[]
   user user @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade)

 }
 
 model categories{
  id BigInt @id @default(autoincrement())
  name String @db.VarChar(33)
  user_id BigInt 
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @db.Timestamp(0) @updatedAt
  Constraints my_constrain
  indexes my_index
   user user @relation(fields: [user_id],references: [id],onDelete: Restrict,onUpdate: Cascade)
 }





enum my_constrain{
  lastName
  id 
  pass
}

enum my_index{

  name 
  pass
}

